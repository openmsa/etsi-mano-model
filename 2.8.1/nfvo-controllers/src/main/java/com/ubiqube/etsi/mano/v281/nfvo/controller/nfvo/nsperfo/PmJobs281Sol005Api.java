/**
 *     Copyright (C) 2019-2024 Ubiqube.
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.4).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.ubiqube.etsi.mano.v281.nfvo.controller.nfvo.nsperfo;

import java.io.IOException;
import java.util.List;
import java.util.Optional;

import jakarta.annotation.security.RolesAllowed;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.ubiqube.etsi.mano.v281.model.em.vnfconfig.ProblemDetails;
import com.ubiqube.etsi.mano.v281.model.em.vnfind.CreatePmJobRequest;
import com.ubiqube.etsi.mano.v281.model.em.vnfind.PerformanceReport;
import com.ubiqube.etsi.mano.v281.model.em.vnfind.PmJob;
import com.ubiqube.etsi.mano.v281.model.em.vnfind.PmJobModifications;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.media.Schema.RequiredMode;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.tags.Tag;

@Tag(name= "pm_jobs")
@RequestMapping(value = "/sol005/nspm/v2", headers = "Version=2.1.0")
@RolesAllowed({ "ROLE_OSSBSS" })
public interface PmJobs281Sol005Api {

	Logger log = LoggerFactory.getLogger(PmJobs281Sol005Api.class);

	default Optional<ObjectMapper> getObjectMapper() {
		return Optional.empty();
	}

	default Optional<HttpServletRequest> getRequest() {
		return Optional.empty();
	}

	default Optional<String> getAcceptHeader() {
		return getRequest().map(r -> r.getHeader("Accept"));
	}

	@ApiResponses(value = {@ApiResponse(responseCode = "200",description = "200 OK Shall be returned when information about zero or more PM jobs has been queried successfully. The response body shall contain in an array the representations of zero or more PM jobs, as defined in clause 7.5.2.7. If the \"filter\" URI parameter or one of the \"all_fields\", \"fields\", \"include_fields\", \"exclude_fields\" or \"exclude_default\" URI parameters was supplied in the request and is supported, the data in the response body shall have been transformed according to the  rules specified in clauses 5.2.2 and 5.3.2 of ETSI GS NFV SOL 013, respectively. If the NFVO supports alternative 2 (paging) according to clause 5.4.2.1 of  ETSI GS NFV SOL 013 for this resource, inclusion of the Link HTTP header  in this response shall follow the provisions in clause 5.4.2.3 of  ETSI GS NFV SOL 013. ",content = @Content(schema = @Schema(implementation = PmJob.class))),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@GetMapping(value = "/pm_jobs",produces = {"application/json"})
	@Operation(description = "The API consumer can use this method to retrieve information about PM jobs. ")
	default ResponseEntity<List<PmJob>> pmJobsGet(@Parameter(in = ParameterIn.HEADER,description = "Version of the API requested to use when responding to this request. " ,required = true) @RequestHeader(value = "Version",required = true) final String version,@Parameter(in = ParameterIn.HEADER,description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231 " ,required = true) @RequestHeader(value = "Accept",required = true) final String accept,@Parameter(in = ParameterIn.HEADER,description = "The MIME type of the body of the request. Reference: IETF RFC 7231 " ,required = true) @RequestHeader(value = "Content-Type",required = true) final String contentType,@Parameter(in = ParameterIn.HEADER,description = "The authorization token for the request. Reference: IETF RFC 7235 ") @RequestHeader(value = "Authorization",required = false) final String authorization,
	@Parameter(in = ParameterIn.QUERY,description = "Attribute-based filtering expression according to clause 5.2 of ETSI GS NFV-SOL 013. The NFVO shall support receiving this parameter as part of the URI query string. The OSS/BSS may supply this parameter. All attribute names that appear in the PmJob and in data types referenced from it shall be supported by the NFVO in the filter expression. ") @Valid @RequestParam(value = "filter",required = false) final String filter,@Parameter(in = ParameterIn.QUERY,description = "Include all complex attributes in the response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFVO shall support this parameter. ") @Valid @RequestParam(value = "all_fields",required = false) final String allFields,@Parameter(in = ParameterIn.QUERY,description = "Complex attributes to be included into the response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFVO should support this parameter. ") @Valid @RequestParam(value = "fields",required = false) final String fields,
	@Parameter(in = ParameterIn.QUERY,description = "Complex attributes to be excluded from the response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFVO should support this parameter. ") @Valid @RequestParam(value = "exclude_fields",required = false) final String excludeFields,@Parameter(in = ParameterIn.QUERY,description = "Indicates to exclude the following complex attributes from the response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFVO shall support this  parameter. The following attributes shall be excluded from the PmJob structure in the response body if this parameter is provided, or none of the parameters \"all_fields\", \"fields\", \"exclude_fields\", \"exclude_default\" are provided: reports. ") @Valid @RequestParam(value = "exclude_default",required = false) final String excludeDefault,@Parameter(in = ParameterIn.QUERY,description = "Marker to obtain the next page of a paged response. Shall be supported by the NFVO if the NFVO supports alternative 2 (paging) according to clause 5.4.2.1 of  ETSI GS NFV-SOL 013 for this resource. ") @Valid @RequestParam(value = "nextpage_opaque_marker",required = false) final String nextpageOpaqueMarker) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
			if (getAcceptHeader().get().contains("application/json")) {
				try {
					return new ResponseEntity<>(getObjectMapper().get().readValue(
					"[ {  \"reports\" : {    \"fileSize\" : 1,    \"_links\" : {      \"objects\" : [ {        \"href\" : \"http://example.com/aeiou\"      }, {        \"href\" : \"http://example.com/aeiou\"      } ],      \"self\" : {        \"href\" : \"http://example.com/aeiou\"      }    }  },  \"subObjectInstanceIds\" : [ { }, { } ],  \"objectInstanceIds\" : [ null, null ],  \"criteria\" : {    \"collectionPeriod\" : 0,    \"reportingPeriod\" : 0,    \"reportingBoundary\" : { },    \"performanceMetricGroup\" : [ null, null ],    \"performanceMetric\" : [ null, null ]  },  \"callbackUri\" : { },  \"id\" : { },  \"objectType\" : { }}, {  \"reports\" : {    \"fileSize\" : 1,    \"_links\" : {      \"objects\" : [ {        \"href\" : \"http://example.com/aeiou\"      }, {        \"href\" : \"http://example.com/aeiou\"      } ],      \"self\" : {        \"href\" : \"http://example.com/aeiou\"      }    }  },  \"subObjectInstanceIds\" : [ { }, { } ],  \"objectInstanceIds\" : [ null, null ],  \"criteria\" : {    \"collectionPeriod\" : 0,    \"reportingPeriod\" : 0,    \"reportingBoundary\" : { },    \"performanceMetricGroup\" : [ null, null ],    \"performanceMetric\" : [ null, null ]  },  \"callbackUri\" : { },  \"id\" : { },  \"objectType\" : { }} ]",
					List.class),HttpStatus.NOT_IMPLEMENTED);
				} catch (final IOException e) {
					log.error("Couldn't serialize response for content type application/json",e);
					return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
				}
			}
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default PmJobsApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@ApiResponses(value = {@ApiResponse(responseCode = "204",description = "204 NO CONTENT Shall be returned when the PM job has been deleted successfully. The response body shall be empty. "),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@DeleteMapping(value = "/pm_jobs/{pmJobId}",produces = {"application/json"})
	@Operation(description = "This method terminates an individual PM job. This method shall follow the provisions specified in the Tables 7.4.3.3.5-1  and 7.4.3.3.5-2 for URI query parameters, request and response data structures,  and response codes.  As the result of successfully executing this method, the \"Individual PM job\"  resource shall not exist any longer. ")
	default ResponseEntity<Void> pmJobsPmJobIdDelete(@Parameter(in = ParameterIn.PATH,description = "Identifier of the PM job. This identifier can be retrieved from the resource referenced by the \"Location\" HTTP header in the response to a POST request creating a new PM job resource. It can also be retrieved from the \"id\" attribute in the payload body of that response.           " ,required = true) @PathVariable("pmJobId") final String pmJobId,@Parameter(in = ParameterIn.HEADER,description = "The authorization token for the request. Reference: IETF RFC 7235. " ,required = true) @RequestHeader(value = "Authorization",required = true) final String authorization,@Parameter(in = ParameterIn.HEADER,description = "Version of the API requested to use when responding to this request. " ,required = true) @RequestHeader(value = "Version",required = true) final String version) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default PmJobsApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@ApiResponses(value = {@ApiResponse(responseCode = "200",description = "200 OK Shall be returned when information about an individual  PM job has been queried successfully. The response body shall contain a representation of the \"Individual PM job resource\", as defined in clause 7.5.2.7. ",content = @Content(schema = @Schema(implementation = PmJob.class))),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@GetMapping(value = "/pm_jobs/{pmJobId}",produces = {"application/json"})
	@Operation(description = "The API consumer can use this method for reading an individual PM job. ")
	default ResponseEntity<PmJob> pmJobsPmJobIdGet(@Parameter(in = ParameterIn.PATH,description = "Identifier of the PM job. This identifier can be retrieved from the resource referenced by the \"Location\" HTTP header in the response to a POST request creating a new PM job resource. It can also be retrieved from the \"id\" attribute in the payload body of that response.           " ,required = true) @PathVariable("pmJobId") final String pmJobId,@Parameter(in = ParameterIn.HEADER,description = "The authorization token for the request. Reference: IETF RFC 7235. " ,required = true) @RequestHeader(value = "Authorization",required = true) final String authorization,@Parameter(in = ParameterIn.HEADER,description = "Version of the API requested to use when responding to this request. " ,required = true) @RequestHeader(value = "Version",required = true) final String version,@Parameter(in = ParameterIn.HEADER,description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. " ,required = true) @RequestHeader(value = "Accept",required = true) final String accept) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
			if (getAcceptHeader().get().contains("application/json")) {
				try {
					return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"reports\" : {    \"fileSize\" : 1,    \"_links\" : {      \"objects\" : [ {        \"href\" : \"http://example.com/aeiou\"      }, {        \"href\" : \"http://example.com/aeiou\"      } ],      \"self\" : {        \"href\" : \"http://example.com/aeiou\"      }    }  },  \"subObjectInstanceIds\" : [ { }, { } ],  \"objectInstanceIds\" : [ null, null ],  \"criteria\" : {    \"collectionPeriod\" : 0,    \"reportingPeriod\" : 0,    \"reportingBoundary\" : { },    \"performanceMetricGroup\" : [ null, null ],    \"performanceMetric\" : [ null, null ]  },  \"callbackUri\" : { },  \"id\" : { },  \"objectType\" : { }}",PmJob.class),HttpStatus.NOT_IMPLEMENTED);
				} catch (final IOException e) {
					log.error("Couldn't serialize response for content type application/json",e);
					return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
				}
			}
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default PmJobsApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@ApiResponses(value = {@ApiResponse(responseCode = "200",description = "200 OK Shall be returned when the request has been processed successfully. The response body shall contain a data structure of type \"PmJobModifications\". ",content = @Content(schema = @Schema(implementation = PmJobModifications.class))),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "412",description = "412 PRECONDITION FAILED Error: A precondition given in an HTTP request header is not fulfilled. Typically, this is due to an ETag mismatch, indicating that the resource was modified by another entity. The response body should contain a ProblemDetails structure, in which the \"detail\" attribute should convey more information about the error. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "422",description = "422 UNPROCESSABLE ENTITY If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. This error response code is only applicable for methods that have a request body. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@Operation(description = "This method allows to modify an \"individual PM job\" resource. This method shall follow the provisions specified in the Tables 7.4.3.3.4-1 and 7.4.3.3.4-2 for URI query parameters, request and response data structures, and response codes. ")
	@PatchMapping(value = "/pm_jobs/{pmJobId}",produces = {"application/json"},consumes = {"application/json"})
	default ResponseEntity<PmJobModifications> pmJobsPmJobIdPatch(@Parameter(in = ParameterIn.PATH,description = "Identifier of the PM job. This identifier can be retrieved from the resource referenced by the \"Location\" HTTP header in the response to a POST request creating a new PM job resource. It can also be retrieved from the \"id\" attribute in the payload body of that response.           " ,required = true) @PathVariable("pmJobId") final String pmJobId,@Parameter(in = ParameterIn.HEADER,description = "The authorization token for the request. Reference: IETF RFC 7235. " ,required = true) @RequestHeader(value = "Authorization",required = true) final String authorization,@Parameter(in = ParameterIn.HEADER,description = "Version of the API requested to use when responding to this request. " ,required = true) @RequestHeader(value = "Version",required = true) final String version,@Parameter(in = ParameterIn.DEFAULT,description = "" ,required = true) @Valid @RequestBody final PmJobModifications pmJobModifications,@Parameter(in = ParameterIn.HEADER,description = "The Content-Type header shall be set to \"application/merge-patch+json\" according to IETF RFC 7396. " ,required = true) @RequestHeader(value = "Content-type",required = true) final String contentType) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
			if (getAcceptHeader().get().contains("application/json")) {
				try {
					return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"callbackUri\" : { },  \"authentication\" : {    \"paramsOauth2ClientCredentials\" : {      \"clientId\" : \"clientId\",      \"clientPassword\" : \"clientPassword\"    },    \"paramsBasic\" : {      \"password\" : \"password\",      \"userName\" : \"userName\"    },    \"authType\" : [ \"BASIC\", \"BASIC\" ]  }}",PmJobModifications.class),HttpStatus.NOT_IMPLEMENTED);
				} catch (final IOException e) {
					log.error("Couldn't serialize response for content type application/json",e);
					return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
				}
			}
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default PmJobsApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@ApiResponses(value = {@ApiResponse(responseCode = "200",description = "200 OK Shall be returned when information of an individual performance  report has been read successfully. The response body shall contain a representation of the \"Individual performance report\" resource, as defined in clause 7.5.2.10. ",content = @Content(schema = @Schema(implementation = PerformanceReport.class))),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@GetMapping(value = "/pm_jobs/{pmJobId}/reports/{reportId}",produces = {"application/json"})
	@Operation(description = "The API consumer can use this method for reading an individual performance report. ")
	default ResponseEntity<PerformanceReport> pmJobsPmJobIdReportsReportIdGet(@Parameter(in = ParameterIn.PATH,description = "Identifier of the PM job. " ,required = true) @PathVariable("pmJobId") final String pmJobId,@Parameter(in = ParameterIn.PATH,description = "Identifier of the performance report. " ,required = true) @PathVariable("reportId") final String reportId,@Parameter(in = ParameterIn.HEADER,description = "The authorization token for the request. Reference: IETF RFC 7235. " ,required = true) @RequestHeader(value = "Authorization",required = true) final String authorization,@Parameter(in = ParameterIn.HEADER,description = "Version of the API requested to use when responding to this request. " ,required = true) @RequestHeader(value = "Version",required = true) final String version,@Parameter(in = ParameterIn.HEADER,description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. " ,required = true) @RequestHeader(value = "Accept",required = true) final String accept) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
			if (getAcceptHeader().get().contains("application/json")) {
				try {
					return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"entries\" : [ {    \"objectInstanceId\" : { },    \"performanceValues\" : [ {      \"timeStamp\" : { },      \"context\" : { },      \"value\" : \"{}\"    }, {      \"timeStamp\" : { },      \"context\" : { },      \"value\" : \"{}\"    } ],    \"objectType\" : { },    \"subObjectInstanceId\" : [ { }, { } ]  }, {    \"objectInstanceId\" : { },    \"performanceValues\" : [ {      \"timeStamp\" : { },      \"context\" : { },      \"value\" : \"{}\"    }, {      \"timeStamp\" : { },      \"context\" : { },      \"value\" : \"{}\"    } ],    \"objectType\" : { },    \"subObjectInstanceId\" : [ { }, { } ]  } ]}",PerformanceReport.class),HttpStatus.NOT_IMPLEMENTED);
				} catch (final IOException e) {
					log.error("Couldn't serialize response for content type application/json",e);
					return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
				}
			}
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default PmJobsApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@ApiResponses(value = {@ApiResponse(responseCode = "201",description = "201 CREATED Shall be returned when the \"Individual PM job\" has been created successfully. The response body shall contain a representation of the created PM job resource, as defined in clause 7.5.2.7. The HTTP response shall include a \"Location\" HTTP header that points to the created \"Individual PM job\" resource. ",content = @Content(schema = @Schema(implementation = PmJob.class))),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "422",description = "422 UNPROCESSABLE ENTITY If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. This error response code is only applicable for methods that have a request body. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@Operation(description = "The POST method creates a PM job. This method shall follow the provisions specified in the  Tables 7.4.2.3.1-1 and 7.4.2.3.1-2 for URI query parameters, request and response data structures, and response codes. As the result of successfully executing this method, a new  \"Individual PM job\" resource exist as defined in clause 7.4.3 shall have been created. ")
	@PostMapping(value = "/pm_jobs",produces = {"application/json"},consumes = {"application/json"})
	default ResponseEntity<PmJob> pmJobsPost(@Parameter(in = ParameterIn.HEADER,description = "Version of the API requested to use when responding to this request. " ,required = true) @RequestHeader(value = "Version",required = true) final String version,@Parameter(in = ParameterIn.DEFAULT,description = "" ,required = true) @Valid @RequestBody final CreatePmJobRequest createPmJobRequest,@Parameter(in = ParameterIn.HEADER,description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231 " ,required = true) @RequestHeader(value = "Accept",required = true) final String accept,@Parameter(in = ParameterIn.HEADER,description = "The MIME type of the body of the request. Reference: IETF RFC 7231 " ,required = true) @RequestHeader(value = "Content-Type",required = true) final String contentType,@Parameter(in = ParameterIn.HEADER,description = "The authorization token for the request. Reference: IETF RFC 7235 ") @RequestHeader(value = "Authorization",required = false) final String authorization) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
			if (getAcceptHeader().get().contains("application/json")) {
				try {
					return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"reports\" : {    \"fileSize\" : 1,    \"_links\" : {      \"objects\" : [ {        \"href\" : \"http://example.com/aeiou\"      }, {        \"href\" : \"http://example.com/aeiou\"      } ],      \"self\" : {        \"href\" : \"http://example.com/aeiou\"      }    }  },  \"subObjectInstanceIds\" : [ { }, { } ],  \"objectInstanceIds\" : [ null, null ],  \"criteria\" : {    \"collectionPeriod\" : 0,    \"reportingPeriod\" : 0,    \"reportingBoundary\" : { },    \"performanceMetricGroup\" : [ null, null ],    \"performanceMetric\" : [ null, null ]  },  \"callbackUri\" : { },  \"id\" : { },  \"objectType\" : { }}",PmJob.class),HttpStatus.NOT_IMPLEMENTED);
				} catch (final IOException e) {
					log.error("Couldn't serialize response for content type application/json",e);
					return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
				}
			}
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default PmJobsApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

}
