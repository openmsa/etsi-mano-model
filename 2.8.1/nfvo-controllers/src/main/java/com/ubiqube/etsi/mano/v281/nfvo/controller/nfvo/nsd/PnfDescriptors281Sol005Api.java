/**
 * Copyright (C) 2019-2025 Ubiqube.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.4).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.ubiqube.etsi.mano.v281.nfvo.controller.nfvo.nsd;

import jakarta.annotation.Nonnull;
import jakarta.annotation.security.RolesAllowed;
import jakarta.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.util.MultiValueMap;
import org.springframework.web.bind.annotation.*;

import com.ubiqube.etsi.mano.v281.model.em.vnfconfig.ProblemDetails;
import com.ubiqube.etsi.mano.v281.model.nfvo.nsd.CreatePnfdInfoRequest;
import com.ubiqube.etsi.mano.v281.model.nfvo.nsd.PnfdInfo;
import com.ubiqube.etsi.mano.v281.model.nfvo.nsd.PnfdInfoModifications;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.media.Schema.RequiredMode;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.tags.Tag;

/**
 *
 * @author Olivier Vignaud {@literal <ovi@ubiqube.com>}
 *
 */
@Tag(name= "pnf_descriptors")
@RequestMapping(value = "/sol005/nsd/v2", headers = "Version=2.0.0")
@RolesAllowed({ "ROLE_OSSBSS" })
public interface PnfDescriptors281Sol005Api {

	@ApiResponses(value = {@ApiResponse(responseCode = "200",description = "200 OK Shall be returned when information about zero or more PNF descriptors has been queried successfully. The response body shall contain in an array the representations of zero or more PNF descriptors, as defined in clause 5.5.2.5. If the NFVO supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource, inclusion of the Link HTTP header in this response shall follow the provisions in clause 5.4.2.3 of ETSI GS NFV-SOL 013. ",content = @Content(schema = @Schema(implementation = PnfdInfo.class))),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "504",description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@GetMapping(value = "/pnf_descriptors",produces = {"application/json"})
	@Operation(description = "\"The GET method queries information about multiple PNF descriptor resources.\" ")
	ResponseEntity<String> pnfDescriptorsGet(@Parameter(in = ParameterIn.QUERY,description = "All query parameters. " ,required = true) @Nonnull @RequestParam MultiValueMap<String, String> requestParams);

	@ApiResponses(value = {@ApiResponse(responseCode = "204",description = "204 NO CONTENT Shall be returned when the operation has completed successfully. The response body shall be empty. "),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "504",description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@DeleteMapping(value = "/pnf_descriptors/{pnfdInfoId}",produces = {"application/json"})
	@Operation(description = "The DELETE method deletes an individual PNF descriptor resource. An individual PNF descriptor resource can only be deleted when t here is no NS instance using it or there is NSD referencing it. To delete all PNFD versions identified by a particular value of the \"pnfdInvariantId\" attribute, the procedure is to first use t he GET method with filter \"pnfdInvariantId\" towards the PNF descriptors resource to find all versions of the PNFD. Then, he API consumer uses the DELETE method described in this clause to delete each PNFD version individually. This method shall follow the provisions specified in the Tables 5.4.6.3.5-1 and 5.4.6.3.5-2 for URI query parameters, request and response data structures, and response codes. ")
	ResponseEntity<Void> pnfDescriptorsPnfdInfoIdDelete(@Parameter(in = ParameterIn.PATH,description = "Identifier of the individual PNF descriptor resource. " ,required = true) @PathVariable("pnfdInfoId") String pnfdInfoId);

	@ApiResponses(value = {@ApiResponse(responseCode = "200",description = "200 OK Shall be returned when information about the individual PNFD descriptor has been read successfully. The response body shall contain a representation of the individual PNF descriptor, as defined in clause 5.5.2.5. ",content = @Content(schema = @Schema(implementation = PnfdInfo.class))),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "504",description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@GetMapping(value = "/pnf_descriptors/{pnfdInfoId}",produces = {"application/json"})
	@Operation(description = "The GET method reads information about an individual PNF descriptor. ")
	ResponseEntity<PnfdInfo> pnfDescriptorsPnfdInfoIdGet(@Parameter(in = ParameterIn.PATH,description = "Identifier of the individual PNF descriptor resource. " ,required = true) @PathVariable("pnfdInfoId") String pnfdInfoId);

	@ApiResponses(value = {@ApiResponse(responseCode = "200",description = "Shall be returned when the content of the manifest file has been read successfully. If the \"include_signatures\" URI query parameter was absent in the request, or if the manifest file has all security-related information embedded (i.e. there is no separate certificate file), the payload body shall contain a copy of the manifest file of the PNFD archive, and the \"Content-Type\" HTTP header shall be set to \"text/plain\". If the \"include_signatures\" URI query parameter was present in the related request and the manifest file does not have all the security-related information embedded (i.e. there is a separate certificate file), the \"Content-Type\" HTTP header shall be set to \"application/zip\" and the payload body shall contain a ZIP archive which includes: - a copy of the manifest file of the PNFD archive; - a copy of the related individual certificate file. "),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "409",description = "409 CONFLICT ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "504",description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@GetMapping(value = "/pnf_descriptors/{pnfdInfoId}/manifest",produces = {"application/json"})
	@Operation(description = "The GET method reads the content of the manifest file within a PNFD archive. This method shall follow the provisions specified in the Tables 5.4.7b.3.2-1 and 5.4.7b.3.2-2 for URI query parameters, request and response data structures, and response codes. ")
	ResponseEntity<Void> pnfDescriptorsPnfdInfoIdManifestGet(
	@Parameter(in = ParameterIn.PATH,description = "Identifier of the individual PNF descriptor. This identifier can be retrieved from the resource referenced by the \"Location\" HTTP header in the response to a POST request creating a new PNF descriptor resource. It can also be retrieved from the \"id\" attribute in the payload body of that response. " ,required = true) @PathVariable("pnfdInfoId") String pnfdInfoId,
	@Parameter(in = ParameterIn.QUERY,description = "If this parameter is provided, the NFVO shall return the manifest and related security information (signature and certificate) either in a single text file if the signature and certificate are included in the manifest file, or in a zip file containing the manifest and the certificate file, if this is provided as a separate file in the PNFD archive. If this parameter is not given, the NFVO shall provide only a copy of the manifest file, as onboarded. If the security information is included in the onboarded manifest, it shall also be included in the returned copy. This URI query parameter is a flag, i.e. it shall have no value. The NFVO shall support this parameter. ") @Valid @RequestParam(value = "include_signatures",required = false) String includeSignatures);

	@ApiResponses(value = {@ApiResponse(responseCode = "200",description = "200 OK Shall be returned when the operation has been accepted and completed successfully. The response body shall contain attribute modifications for an 'Individual PNF Descriptor' resource (see clause 5.5.2.4). ",content = @Content(schema = @Schema(implementation = PnfdInfoModifications.class))),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "412",description = "412 PRECONDITION FAILED Error: A precondition given in an HTTP request header is not fulfilled. Typically, this is due to an ETag mismatch, indicating that the resource was modified by another entity. The response body should contain a ProblemDetails structure, in which the \"detail\" attribute should convey more information about the error. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "504",description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@Operation(description = "The PATCH method modifies the user defined data of an individual PNF descriptor resource. ")
	@PatchMapping(value = "/pnf_descriptors/{pnfdInfoId}",produces = {"application/json"},consumes = {"application/json"})
	ResponseEntity<PnfdInfoModifications> pnfDescriptorsPnfdInfoIdPatch(
	@Parameter(in = ParameterIn.PATH,description = "Identifier of the individual PNF descriptor resource. " ,required = true) @PathVariable("pnfdInfoId") String pnfdInfoId,
	@Parameter(in = ParameterIn.DEFAULT,description = "" ,required = true) @Valid @RequestBody PnfdInfoModifications pnfdInfoModifications);

	@ApiResponses(value = {@ApiResponse(responseCode = "200",description = "200 OK Shall be returned when the content of the PNFD archive has been read successfully. The payload body shall contain a copy of the PNFD archive The \"Content-Type\" HTTP header shall be set to \"application/zip\". "),@ApiResponse(responseCode = "206",description = "206 PARTIAL CONTENT If the NFVO supports range requests, this response shall be returned when a single consecutive byte range from the content of the PNFD archive has been read successfully according to the request. The response body shall contain the requested part of the PNFD archive. The \"Content-Range\" HTTP header shall be provided according to IETF RFC 7233. The \"Content-Type\" HTTP header shall be set as defined above for the \"200 OK\" response. "),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "409",description = "409 CONFLICT ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "416",description = "416 RANGE NOT SATISFIABLE ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "504",description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@GetMapping(value = "/pnf_descriptors/{pnfdInfoId}/pnfd_content",produces = {"application/json"})
	@Operation(description = "The GET method fetches the content of the PNFD archive. The content of the PNFD archive is provided as onboarded, i.e. depending on the security option used, the CSAR or the CSAR wrapped in a ZIP archive together with an external signature is returned, as defined in clause 5.1 of ETSI GS NFV-SOL 004. NOTE: Information about the applicable security option can be obtained by evaluating the \"archiveSecurityOption\" attribute in the \"pnfdInfo\" structure. This method shall follow the provisions specified in the Tables 5.4.7.3.2-1 and 5.4.7.3.2-2 for URI query parameters, request and response data structures, and response codes. ")
	ResponseEntity<Void> pnfDescriptorsPnfdInfoIdPnfdContentGet(
	@Parameter(in = ParameterIn.PATH,description = "Identifier of the individual PNF descriptor. This identifier can be retrieved from the resource referenced by the \"Location\" HTTP header in the response to a POST request creating a new PNF descriptor resource. It can also be retrieved from the \"id\" attribute in the payload body of that response. " ,required = true) @PathVariable("pnfdInfoId") String pnfdInfoId,
	@Parameter(in = ParameterIn.HEADER,description = "The request may contain a \"Range\" HTTP header to obtain single range of bytes from the PNFD archive. This can be used to continue an aborted transmission. If the NFVO does not support range requests, the NFVO shall ignore the \"Range\" header, process the GET request, and return the whole PNFD archive with a 200 OK response (rather than returning a 4xx error status code). ") @RequestHeader(value = "Range",required = false) String range);

	@ApiResponses(value = {@ApiResponse(responseCode = "202",description = "202 ACCEPTED Shall be returned when the PNFD archive has been accepted for uploading, but the processing has not been completed. It is expected to take some time for processing (asynchronous mode). The response body shall be empty. The API consumer can track the uploading progress by receiving the \"PnfdOnBoardingNotification\" and \"PnfdOnBoardingFailureNotification\" from the NFVO or by reading the status of the individual PNF descriptor resource using the GET method. "),@ApiResponse(responseCode = "204",description = "204 NO CONTENT Shall be returned when the PNFD archive content has been uploaded and validated successfully. The response body shall be empty. "),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "409",description = "409 CONFLICT ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@Operation(description = "The PUT method is used to upload the content of a PNFD archive.         ")
	@PutMapping(value = "/pnf_descriptors/{pnfdInfoId}/pnfd_content",produces = {"application/json"},consumes = {"application/json"})
	ResponseEntity<Void> pnfDescriptorsPnfdInfoIdPnfdContentPut(
	@Parameter(in = ParameterIn.PATH,description = "Identifier of the individual PNF descriptor. This identifier can be retrieved from the resource referenced by the \"Location\" HTTP header in the response to a POST request creating a new PNF descriptor resource. It can also be retrieved from the \"id\" attribute in the payload body of that response. " ,required = true) @PathVariable("pnfdInfoId") String pnfdInfoId,
	@Parameter(in = ParameterIn.HEADER,description = "The request shall set the \"Content-Type\" HTTP header to \"application/zip\". ") @RequestHeader(value = "Content-type",required = false) String contentType);

	@ApiResponses(value = {@ApiResponse(responseCode = "200",description = "200 OK Shall be returned when the content of the PNFD has been read successfully. The payload body shall contain a copy of the file representing the PNFD or a ZIP file that contains the file or multiple files representing the PNFD, as specified above. The \"Content-Type\" HTTP header shall be set according to the format of the returned file. It shall be set to \"text/plain\" for a YAML file. "),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "409",description = "409 CONFLICT ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "504",description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@GetMapping(value = "/pnf_descriptors/{pnfdInfoId}/pnfd",produces = {"application/json"})
	@Operation(description = "The GET method reads the content of the PNFD within a PNFD archive. The PNFD can be implemented as a single file or as a collection of multiple files. If the PNFD is implemented in the form of multiple files, a ZIP file embedding these files shall be returned. If the PNFD is implemented as a single file, either that file or a ZIP file embedding that file shall be returned. The selection of the format is controlled by the \"Accept\" HTTP header passed in the GET request: • If the \"Accept\" header contains only \"text/plain\" and the PNFD is     implemented as a single file, the file shall be returned; otherwise,     an error message shall be returned. • If the \"Accept\" header contains only \"application/zip\", the single     file or the multiple files that make up the PNFD shall be returned     embedded in a ZIP file. • If the \"Accept\" header contains both \"text/plain\" and \"application/zip\",     it is up to the NFVO to choose the format to return for a single-file PNFD;     for a multi-file PNFD, a ZIP file shall be returned. The default format of the ZIP file shall be the one specified in ETSI GS NFV-SOL 004 where only the YAML files representing the PNFD, and information necessary to navigate the ZIP file and to identify the file that is the entry point for parsing the PNFD and (if requested) further security information are included. This means that the content of the ZIP archive shall contain the following files from the PNFD archive: • TOSCA.meta (if available in the PNFD archive); • the main service template (either as referenced from TOSCA.meta or     available as a file with the extension \".yml\" or \".yaml\" from the     root of the archive); • every component of the PNFD referenced (recursively) from the main     service template; • the related security information, if the \"include_signatures\" URI     parameter is provided, as follows:     - the manifest file;     - the singleton certificate file in the root of the PNFD archive         (if available in the PNFD archive);     - the signing certificates of the individual files included in the         ZIP archive (if available in the PNFD archive);     - the signatures of the individual files (if available in the PNFD archive). This method shall follow the provisions specified in the Tables 5.4.7a.3.2-1 and 5.4.7a.3.2-2 for URI query parameters, request and response data structures, and response codes. ")
	ResponseEntity<Void> pnfDescriptorsPnfdInfoIdPnfdGet(
	@Parameter(in = ParameterIn.PATH,description = "Identifier of the individual PNF descriptor. This identifier can be retrieved from the resource referenced by the \"Location\" HTTP header in the response to a POST request creating a new PNF descriptor resource. It can also be retrieved from the \"id\" attribute in the payload body of that response. " ,required = true) @PathVariable("pnfdInfoId") String pnfdInfoId,
	@Parameter(in = ParameterIn.HEADER,description = "The request may contain a \"Range\" HTTP header to obtain single range of bytes from the PNFD archive. This can be used to continue an aborted transmission. If the NFVO does not support range requests, the NFVO shall ignore the \"Range\" header, process the GET request, and return the whole PNFD archive with a 200 OK response (rather than returning a 4xx error status code). ") @RequestHeader(value = "Range",required = false) String range,
	@Parameter(in = ParameterIn.QUERY,description = "If this parameter is provided, the NFVO shall include in the ZIP file the security information as specified above. This URI query parameter is a flag, i.e. it shall have no value. The NFVO shall support this parameter. ") @Valid @RequestParam(value = "include_signatures",required = false) String includeSignatures);

	@ApiResponses(value = {@ApiResponse(responseCode = "201",description = "201 CREATED Shall be returned when a new \"Individual PNF descriptor\" resource and the associated PNF descriptor identifier has been created successfully. The response body shall contain a representation of the  created PNF descriptor resource, as defined in clause 5.5.2.5. The HTTP response shall include a \"Location\" HTTP header that contains the resource URI of the created PNF descriptor resource. ",content = @Content(schema = @Schema(implementation = PnfdInfo.class))),@ApiResponse(responseCode = "400",description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "401",description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "403",description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "404",description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "405",description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "406",description = "406 NOT ACCEPTABLE If the \"Accept\" header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "500",description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "503",description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class))),@ApiResponse(responseCode = "504",description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ",content = @Content(schema = @Schema(implementation = ProblemDetails.class)))})
	@Operation(description = "The POST method is used to create a new PNF descriptor resource ")
	@PostMapping(value = "/pnf_descriptors",produces = {"application/json"},consumes = {"application/json"})
	ResponseEntity<PnfdInfo> pnfDescriptorsPost(@Parameter(in = ParameterIn.DEFAULT,description = "" ,required = true) @Valid @RequestBody CreatePnfdInfoRequest createPnfdInfoRequest);

}
