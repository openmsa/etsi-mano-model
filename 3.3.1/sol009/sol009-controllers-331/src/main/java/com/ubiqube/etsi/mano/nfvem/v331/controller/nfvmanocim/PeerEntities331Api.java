/**
 *     Copyright (C) 2019-2024 Ubiqube.
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.20).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.ubiqube.etsi.mano.nfvem.v331.controller.nfvmanocim;

import java.util.List;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.ubiqube.etsi.mano.v331.model.nfvem.nfvmanocim.CreatePeerEntityRequest;
import com.ubiqube.etsi.mano.v331.model.nfvem.nfvmanocim.PeerEntity;
import com.ubiqube.etsi.mano.v331.model.nfvem.nfvmanocim.PeerEntityConfigModificationRequest;
import com.ubiqube.etsi.mano.v331.model.nfvem.nfvmanocim.PeerEntityConfigModifications;
import com.ubiqube.etsi.mano.v331.model.nfvem.nfvmanocim.ProblemDetails;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.media.Schema.RequiredMode;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.validation.Valid;

/**
 *
 * @author Olivier Vignaud {@literal <ovi@ubiqube.com>}
 *
 */
@Tag(name = "peer_entities")
public interface PeerEntities331Api {

	@ApiResponses(value = { @ApiResponse(responseCode = "200", description = "200 OK Shall be returned when information about zero or more peer  entities has been queried successfully. The response body shall contain in an array the resource  representations of zero or more peer entities, as defined  in clause 5.6.2.15. If the “filter\" URI parameter or one of the \"all_fields\", \"fields\"  (if supported), \"exclude_fields\" (if supported) or \"exclude_default\"  URI parameters was supplied in the request, the data in the response  body shall have been transformed according to the rules specified in  clauses 5.2.2 and 5.3.2 of ETSI GS NFV-SOL 013, respectively. If the NFV-MANO functional entity supports alternative N°2 (paging)  according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource,  inclusion of the Link HTTP header in this response shall follow the  provisions in clause 5.4.2.3 of ETSI GS NFV-SOL 013. ", content = @Content(schema = @Schema(implementation = PeerEntity.class))),
			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST Shall be returned upon the following errors:    - Invalid attribute-based filtering expression.     The response body shall contain a ProblemDetails structure, in which      the \"detail\" attribute should convey more information about the error.   - Invalid attribute selector.     The response body shall contain a ProblemDetails structure, in which      the \"detail\" attribute should convey more information about the error.   - Response too big.     If the NFV-MANO functional entity supports alternative N°1 (error)      according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource,      this error response shall follow the provisions in clause 5.4.2.2 of      ETSI GS NFV-SOL 013. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "422", description = "422 UNPROCESSABLE ENTITY If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. This error response code is only applicable for methods that have a request body. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@Operation(description = "Queries information and configuration in the producer NFV-MANO  functional entity with regards to multiple peer entities. This method shall follow the provisions specified in the tables  5.5.13.3.2-1 and 5.5.13.3.2-2 for URI query parameters, request  and response data structures, and response codes. ")
	@RequestMapping(value = "/peer_entities", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<List<PeerEntity>> peerEntitiesGet(@Parameter(in = ParameterIn.QUERY, description = "Attribute-based filtering expression according to clause 5.2 of  ETSI GS NFV-SOL 013.  The NFV-MANO functional entity shall support receiving this parameter  as part of the URI query string. The API consumer may supply this  parameter.  All attribute names that appear in the PeerEntities and in data  types referenced from it shall be supported by the NFV-MANO functional  entity in the expression.  ", schema = @Schema()) @Valid @RequestParam(value = "filter", required = false) String filter,
			@Parameter(in = ParameterIn.QUERY, description = "Include all complex attributes in the response. See clause  5.3 of ETSI GS NFV-SOL 013. The NFV-MANO functional entity  shall support this parameter. ", schema = @Schema()) @Valid @RequestParam(value = "all_fields", required = false) String allFields,
			@Parameter(in = ParameterIn.QUERY, description = "Complex attributes to be included into the response. See clause  5.3 of ETSI GS NFV-SOL 013 for details. The NFV-MANO functional  entity should support this parameter. ", schema = @Schema()) @Valid @RequestParam(value = "fields", required = false) String fields,
			@Parameter(in = ParameterIn.QUERY, description = "Complex attributes to be excluded from the response. See clause  5.3 of ETSI GS NFV-SOL 013 for details. The NFV-MANO functional  entity should support this parameter. ", schema = @Schema()) @Valid @RequestParam(value = "exclude_fields", required = false) String excludeFields,
			@Parameter(in = ParameterIn.QUERY, description = "Indicates to exclude the following complex attributes from the response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFV-MANO functional entity which acts as API producer shall support this parameter. The following attributes shall be excluded from the PeerEntities structure in the response body if this parameter is provided, or none of the parameters \"all_fields\", \"fields\", \"exclude_fields\", \"exclude_default\" are provided: • consumedManoInterfaces. ", schema = @Schema()) @Valid @RequestParam(value = "exclude_default", required = false) String excludeDefault,
			@Parameter(in = ParameterIn.QUERY, description = "Marker to obtain the next page of a paged response. Shall be supported by  the NFV-MANO functional entity if the entity supports alternative 2 (paging)  according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource. ", schema = @Schema()) @Valid @RequestParam(value = "nextpage_opaque_marker", required = false) String nextpageOpaqueMarker);

	@ApiResponses(value = { @ApiResponse(responseCode = "204", description = "204 NO CONTENT Shall be returned when the \"Individual peer entity\" resource  has been deleted successfully. The response body shall be empty. "), @ApiResponse(responseCode = "409", description = "409 CONFLICT. Shall be returned upon the following error: The operation cannot be  executed currently, due to a conflict with the state of the  \"Individual peer entity\" resource. Typically, this is due to the fact that another operation is ongoing. The response body shall contain a ProblemDetails structure, in which  the \"detail\" attribute should convey more information about the error. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "412", description = "412 PRECONDITION FAILED Shall be returned upon the following error: A precondition given in  an HTTP request header is not fulfilled. Typically, this is due to an ETag mismatch, indicating that the  resource was modified by another entity. The response body should contain a ProblemDetails structure, in which  the \"detail\" attribute should convey more information about the error. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "422", description = "422 UNPROCESSABLE ENTITY If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. This error response code is only applicable for methods that have a request body. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@Operation(description = "Ddeletes an individual peer entity resource. By deleting such  a resource in the producer NFV-MANO functional entity representing  a peer NFV-MANO entity, the configuration and information with  regards to such peer entity is deleted. Consequently, the peering  relationship between the producer NFV-MANO functional entity and  the peer entity is terminated, i.e., the producer NFV-MANO functional  entity does not have the necessary information to communicate/interact  with the peer entity. This method shall follow the provisions specified in the tables  5.5.14.3.5-1 and 5.5.14.3.5-2 for URI query parameters, request  and response data structures, and response codes. ")
	@RequestMapping(value = "/peer_entities/{peerEntityId}", produces = { "application/json" }, method = RequestMethod.DELETE)
	ResponseEntity<Void> peerEntitiesPeerEntityIdDelete(@Parameter(in = ParameterIn.PATH, description = "Identifier of the peer entity", required = true) @PathVariable("peerEntityId") final String peerEntityId);

	@ApiResponses(value = { @ApiResponse(responseCode = "200", description = "200 OK Shall be returned when information about an individual peer  functional entity has been read successfully. The response body shall contain a resource representation of  the peer functional entity, as defined in clause 5.6.2.15. ", content = @Content(schema = @Schema(implementation = PeerEntity.class))),
			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "422", description = "422 UNPROCESSABLE ENTITY If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. This error response code is only applicable for methods that have a request body. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@Operation(description = "Retrieves information and configuration hold in the producer NFV-MANO  functional entity with regards to a peer entity by reading an individual  peer entity resource. This method shall follow the provisions specified in the tables  5.5.14.3.2-1 and 5.5.14.3.2-2 for URI query parameters, request  and response data structures, and response codes. ")
	@RequestMapping(value = "/peer_entities/{peerEntityId}", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<PeerEntity> peerEntitiesPeerEntityIdGet(@Parameter(in = ParameterIn.PATH, description = "Identifier of the peer entity", required = true) @PathVariable("peerEntityId") final String peerEntityId);

	@ApiResponses(value = { @ApiResponse(responseCode = "200", description = "200 OK Shall be returned when the request has been accepted and completed. The response body shall contain a representation of the attribute  modifications for the \"Individual peer entity\" resource, as defined  in clause 5.6.2.17. ", content = @Content(schema = @Schema(implementation = PeerEntityConfigModifications.class))), @ApiResponse(responseCode = "409", description = "409 CONFLICT. Shall be returned upon the following error: The operation cannot be  executed currently, due to a conflict with the state of the  \"Individual peer entity\" resource. Typically, this is due to the fact that another operation is ongoing. The response body shall contain a ProblemDetails structure, in which  the \"detail\" attribute should convey more information about the error. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "412", description = "412 PRECONDITION FAILED Shall be returned upon the following error: A precondition given in  an HTTP request header is not fulfilled. Typically, this is due to an ETag mismatch, indicating that the  resource was modified by another entity. The response body should contain a ProblemDetails structure, in which  the \"detail\" attribute should convey more information about the error. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "422", description = "422 UNPROCESSABLE ENTITY If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. This error response code is only applicable for methods that have a request body. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@Operation(description = "Modifies configuration and information of the producer NFV-MANO  functional entity with regards to a peer functional entity by  updating the corresponding \"Individual peer entity\" resource. Changes to the configurable parameters of the corresponding peer  entity are applied to the information managed by the producer  NFV-MANO functional entity and reflected in the representation  of this resource. This method shall follow the provisions specified in the tables  5.5.14.3.4-1 and 5.5.14.3.4-2 for URI query parameters, request  and response data structures, and response codes. ")
	@RequestMapping(value = "/peer_entities/{peerEntityId}", produces = { "application/json" }, consumes = { "application/merge-patch+json" }, method = RequestMethod.PATCH)
	ResponseEntity<PeerEntityConfigModifications> peerEntitiesPeerEntityIdPatch(
			@Parameter(in = ParameterIn.PATH, description = "Identifier of the peer entity", required = true) @PathVariable("peerEntityId") final String peerEntityId,
			@Parameter(in = ParameterIn.DEFAULT, description = "Parameters for the modification of configuration parameters of  the peer functional entity, as defined in clause 5.6.2.16The Content-Type header shall be set to 'application/merge-patch+json'  according to IETF RFC 7396.", required = true) @Valid @RequestBody final PeerEntityConfigModificationRequest body);

	@ApiResponses(value = { @ApiResponse(responseCode = "201", description = "201 CREATED Shall be returned when a new \"Individual peer entity\" resource  has been created successfully. The response body shall contain a representation of the created  resource with regards to a peer entity, as defined in  clause 5.6.2.15. The HTTP response shall include a “Location” HTTP header that  points to the created \"Individual peer entity\" resource. ", content = @Content(schema = @Schema(implementation = PeerEntity.class))),
			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the payload body contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a payload body with an empty array. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "422", description = "422 UNPROCESSABLE ENTITY If the payload body of a request contains syntactically correct data (e.g. well-formed JSON) but the data cannot be processed (e.g. because it fails validation against a schema), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. This error response code is only applicable for methods that have a request body. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))),
			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))), @ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(schema = @Schema(implementation = ProblemDetails.class))) })
	@Operation(description = "Creates in the producer NFV-MANO functional entity a new peer  entity resource which contains configuration and information  with regards to the peer functional entity. This method shall follow the provisions specified in the tables  5.5.13.3.1-1 and 5.5.13.3.1-2 for URI query parameters, request  and response data structures, and response codes. ")
	@RequestMapping(value = "/peer_entities", produces = { "application/json" }, consumes = { "application/json" }, method = RequestMethod.POST)
	ResponseEntity<PeerEntity> peerEntitiesPost(@Parameter(in = ParameterIn.DEFAULT, description = "The peer entity creation parameters, as defined in clause 5.6.2.14.", required = true) @Valid @RequestBody CreatePeerEntityRequest body);

}
